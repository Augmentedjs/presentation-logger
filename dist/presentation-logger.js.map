{"version":3,"sources":["webpack://presentation-logger/webpack/universalModuleDefinition","webpack://presentation-logger/webpack/bootstrap","webpack://presentation-logger/external {\"commonjs\":\"next-core-logger\",\"commonjs2\":\"next-core-logger\",\"amd\":\"next-core-logger\",\"root\":\"next-core-logger\"}","webpack://presentation-logger/./src/index.js","webpack://presentation-logger/./src/colorLogger.js","webpack://presentation-logger/./src/restLogger.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE__0__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ColorConsoleLogger","RestLogger","_nextCoreLogger","AbstractLogger","constructor","super","_getLogTime","_logMe","level","Level","INFO","console","ERROR","DEBUG","WARN","_uri","uri","request","url","method","contentType","dataType","async","data","message","success","status","failure","e"],"mappings":"CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,EAAAG,QAAA,qBACA,mBAAAC,eAAAC,IACAD,OAAA,2CAAAJ,GACA,iBAAAC,QACAA,QAAA,uBAAAD,EAAAG,QAAA,qBAEAJ,EAAA,uBAAAC,EAAAD,EAAA,qBARA,CASCO,KAAA,SAAAC,GACD,mBCTA,IAAAC,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAT,QAGA,IAAAC,EAAAM,EAAAE,GAAA,CACAC,EAAAD,EACAE,GAAA,EACAX,QAAA,IAUA,OANAY,EAAAH,GAAAI,KAAAZ,EAAAD,QAAAC,IAAAD,QAAAQ,GAGAP,EAAAU,GAAA,EAGAV,EAAAD,QA0DA,OArDAQ,EAAAM,EAAAF,EAGAJ,EAAAO,EAAAR,EAGAC,EAAAQ,EAAA,SAAAhB,EAAAiB,EAAAC,GACAV,EAAAW,EAAAnB,EAAAiB,IACAG,OAAAC,eAAArB,EAAAiB,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CV,EAAAgB,EAAA,SAAAxB,GACA,oBAAAyB,eAAAC,aACAN,OAAAC,eAAArB,EAAAyB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAArB,EAAA,cAAiD2B,OAAA,KAQjDnB,EAAAoB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAnB,EAAAmB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFAxB,EAAAgB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAnB,EAAAQ,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAvB,EAAA2B,EAAA,SAAAlC,GACA,IAAAiB,EAAAjB,KAAA6B,WACA,WAA2B,OAAA7B,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAO,EAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD7B,EAAAgC,EAAA,SAIAhC,IAAAiC,EAAA,mBClFAxC,EAAAD,QAAAM,gCCAA,QAAAE,EAAA,QACAA,EAAA,uDAEAP,6BAAoCyC,EAApCzC,QACAA,qBAA4B0C,EAA5B1C,uFCJA,IAAA2C,EAAApC,EAAA,aAQA,cAAiCqC,EAAjCA,eACEC,eACEC,MAAApC,GAEFqC,cACE,SAGFC,eACMC,IAAUC,QAAdC,KACEC,uCACSH,IAAUC,QAAdG,MACLD,uCACSH,IAAUC,QAAdI,MACLF,sCACSH,IAAUC,QAAdK,KACLH,wCAEAA,wHC1BN,IAAAT,EAAApC,EAAA,aAQA,cAAyBqC,EAAzBA,eACEC,iBACEC,MAAApC,GACAN,KAAAoD,KAAAC,EAKFA,WACErD,KAAAoD,KAAAC,EAEFA,UACE,OAAOrD,KAAPoD,KAGFR,aAQEU,QAAQ,CACNC,IAAKvD,KADCoD,KAENI,OAFM,OAGNC,YAHM,aAINC,SAJM,OAKNC,OALM,EAMNC,KANMC,EAONC,QAAS,CAAAF,EAAAG,OAGTC,QAASC,IACPjE,KAAAgE,QAAAC","file":"presentation-logger.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"next-core-logger\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"presentation-logger\", [\"next-core-logger\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"presentation-logger\"] = factory(require(\"next-core-logger\"));\n\telse\n\t\troot[\"presentation-logger\"] = factory(root[\"next-core-logger\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE__0__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","import ColorConsoleLogger from \"./colorLogger.js\";\nimport RestLogger from \"./restLogger.js\";\n\nmodule.exports.ColorConsoleLogger = ColorConsoleLogger;\nmodule.exports.RestLogger = RestLogger;\n","import { AbstractLogger, Level } from \"next-core-logger\";\n\n/**\n * Color Console Logger\n * @param {Logger.Level} l The level to initialize the logger with\n * @memberof Logger\n * @extends AbstractLogger\n */\nclass ColorConsoleLogger extends AbstractLogger {\n  constructor(l) {\n    super(l);\n  };\n  _getLogTime() {\n    return \"\";\n  };\n\n  _logMe(level, ...message) {\n    if (level === Level.INFO) {\n      console.info(`%c`, ...message, \"color: blue;\");\n    } else if (level === Level.ERROR) {\n      console.error(`%c`, ...message, \"color: red;\");\n    } else if (level === Level.DEBUG) {\n      console.log(`%c`, ...message, \"color: gray;\");\n    } else if (level === Level.WARN) {\n      console.warn(`%c`, ...message, \"color: brown;\");\n    } else {\n      console.log(`%c`, ...message, \"color: black;\");\n    }\n  };\n};\n\nexport default ColorConsoleLogger;\n","import { AbstractLogger } from \"next-core-logger\";\n\n/**\n * REST Logger - *requires override of _logMe\n * @param {Logger.Level} l The level to initialize the logger with\n * @extends AbstractLogger\n * @deprecated\n */\nclass RestLogger extends AbstractLogger {\n  constructor(l, uri) {\n    super(l);\n    this._uri = uri;\n  };\n  /**\n   * @property {string} uri The URI to use for RestLogger\n   */\n  set uri(uri) {\n    this._uri = uri;\n  };\n  get uri() {\n    return this._uri;\n  };\n\n  _logMe(...message) {\n    const success = (data, status) => {\n      // yippee!!!\n    },\n    error = (e) => {\n      throw new Error(e);\n    };\n\n    request({\n      url: this._uri,\n      method: \"POST\",\n      contentType: \"text/plain\",\n      dataType: \"text\",\n      async: true,\n      data: message,\n      success: (data, status) => {\n        success(data, status);\n      },\n      failure: (e) => {\n        this.failure(e);\n      }\n    });\n  };\n};\n\nexport default RestLogger;\n"],"sourceRoot":""}