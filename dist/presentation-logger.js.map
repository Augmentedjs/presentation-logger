{"version":3,"sources":["webpack://presentation-logger/webpack/universalModuleDefinition","webpack://presentation-logger/webpack/bootstrap","webpack://presentation-logger/external {\"commonjs\":\"next-core-logger\",\"commonjs2\":\"next-core-logger\",\"amd\":\"next-core-logger\",\"root\":\"next-core-logger\"}","webpack://presentation-logger/./src/logger.js","webpack://presentation-logger/./src/index.js","webpack://presentation-logger/./src/colorLogger.js","webpack://presentation-logger/./src/basicLogger.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE__0__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ConsoleLogger","AbstractLogger","constructor","super","_getLogTime","_logMe","level","Level","console","ColorConsoleLogger","BasicLogger","message","log","info","OPEN_GROUP","CLOSE_GROUP","error","debug","warn"],"mappings":"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","file":"presentation-logger.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"next-core-logger\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"presentation-logger\", [\"next-core-logger\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"presentation-logger\"] = factory(require(\"next-core-logger\"));\n\telse\n\t\troot[\"presentation-logger\"] = factory(root[\"next-core-logger\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE__0__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","import { AbstractLogger, Level } from \"next-core-logger\";\n\n/**\n * Console Logger\n * @param {Level} l The level to initialize the logger with\n * @memberof Logger\n * @extends AbstractLogger\n */\nclass ConsoleLogger extends AbstractLogger {\n  constructor(l) {\n    super(l);\n  };\n  _getLogTime() {\n    return \"\";\n  };\n\n  _logMe(level, ...message) {\n    if (level === Level.INFO) {\n      console.info(...message);\n    } else if (level === Level.ERROR) {\n      console.error(...message);\n    } else if (level === Level.DEBUG) {\n      console.log(...message);\n    } else if (level === Level.WARN) {\n      console.warn(...message);\n    } else {\n      console.log(...message);\n    }\n  };\n};\n\nexport default ConsoleLogger;\n","import ColorConsoleLogger from \"./colorLogger.js\";\nimport ConsoleLogger from \"./logger.js\";\nimport BasicLogger from \"./basicLogger.js\";\nimport { Level } from \"next-core-logger\";\n\nmodule.exports.ColorConsoleLogger = ColorConsoleLogger;\nmodule.exports.ConsoleLogger = ConsoleLogger;\nmodule.exports.BasicLogger = BasicLogger;\nmodule.exports.Level = Level;\n","import { AbstractLogger, Level } from \"next-core-logger\";\n\n/**\n * Color Console Logger\n * @param {Logger.Level} l The level to initialize the logger with\n * @memberof Logger\n * @extends AbstractLogger\n */\nclass ColorConsoleLogger extends AbstractLogger {\n  constructor(l) {\n    super(l);\n  };\n  _getLogTime() {\n    return \"\";\n  };\n\n  _logMe(level, ...message) {\n    if (level === Level.INFO) {\n      console.info(`%c ${message[0]} ${message[1]}`, \"color: blue;\");\n    } else if (level === Level.ERROR) {\n      console.error(`%c ${message[0]} ${message[1]}`, \"color: red;\");\n    } else if (level === Level.DEBUG) {\n      console.log(`%c ${message[0]} ${message[1]}`, \"color: gray;\");\n    } else if (level === Level.WARN) {\n      console.warn(`%c ${message[0]} ${message[1]}`, \"color: brown;\");\n    } else {\n      console.log(`%c ${message[0]} ${message[1]}`, \"color: black;\");\n    }\n  };\n};\n\nexport default ColorConsoleLogger;\n","import { Level } from \"next-core-logger\";\nimport ConsoleLogger from \"./logger\";\n\nclass BasicLogger extends  ConsoleLogger {\n  constructor(l) {\n    super(l);\n    this.loggerLevel = (l) ? l : Level.INFO;\n    this.label = Level;\n    this.TIME_SEPERATOR = \":\";\n    this.DATE_SEPERATOR = \"-\";\n    this.OPEN_GROUP = \" [ \";\n    this.CLOSE_GROUP = \" ] \";\n  };\n\n  /**\n   * log a message with default level\n   * @param {string} message The message to log\n   * @param {Logger.Level} level The level of the log message\n   * @returns {Any} The message\n   */\n  log(...message) {\n    return this.info(...message);\n  };\n\n  /**\n   * Logs a message in info level\n   * @param {Any} message\n   */\n  info(...message) {\n    return this._logMe(Level.INFO, `${this.OPEN_GROUP}INFO  ${this.CLOSE_GROUP}`, ...message);\n  };\n\n  /**\n   * Log a message in error level\n   * @param {Any} message\n   */\n  error(...message) {\n    return this._logMe(Level.ERROR, `${this.OPEN_GROUP}ERROR ${this.CLOSE_GROUP}`, ...message);\n  };\n\n  /**\n   * Log a message in debug level\n   * @param {Any} message\n   */\n  debug(...message) {\n    return this._logMe(Level.DEBUG, `${this.OPEN_GROUP}DEBUG ${this.CLOSE_GROUP}`, ...message);\n  };\n\n  /**\n   * Log a message in warn level\n   * @param {Any} message\n   */\n  warn(...message) {\n    return this._logMe(Level.WARN, `${this.OPEN_GROUP}WARN  ${this.CLOSE_GROUP}`, ...message);\n  };\n};\n\nexport default BasicLogger;\n"],"sourceRoot":""}